{"ast":null,"code":"var _jsxFileName = \"/home/nase/phase two/week-two-code-challenge/src/components/App.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport BotsCollection from \"./BotsCollection\";\nimport MyBotsArmy from \"./MyBotsArmy\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [bots, setBots] = useState([]);\n  const [myBotsArmy, setMyBotsArmy] = useState([]);\n  useEffect(() => {\n    fetch(\"http://localhost:3000/bots\").then(res => res.json()).then(data => {\n      setBots(data);\n    });\n  }, []);\n  const botsElement = bots.map(bot => {\n    return /*#__PURE__*/_jsxDEV(BotsCollection, {\n      bot: bot,\n      AddMyBot: AddMyBot,\n      deleteBot: deleteBot\n    }, bot.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this);\n  });\n  function AddMyBot(item) {\n    if (!myBotsArmy.includes(item)) {\n      setMyBotsArmy(prevState => {\n        return [...prevState, item];\n      });\n    }\n  }\n  const myBotElement = myBotsArmy.map((bot, index) => {\n    return /*#__PURE__*/_jsxDEV(MyBotsArmy, {\n      mybot: bot,\n      removeMyBot: removeMyBot\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this);\n  });\n  function removeMyBot(element) {\n    setMyBotsArmy(prevState => {\n      return prevState.filter(bot => bot !== element);\n    });\n  }\n  function deleteBot(id) {\n    fetch(`http://localhost:3000/bots/${id}`, {\n      method: \"DELETE\"\n    }).then(() => {\n      const updatedBots = bots.filter(bot => bot.id !== id);\n      setBots(updatedBots);\n    }).catch(err => console.log(err));\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bots-collection\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Bots Collection\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"cards-container\",\n        children: botsElement\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"my-bots-army\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"My Bots Army\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"cards-container\",\n        children: myBotElement\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"3Z62te2ZB9JNu6D/ZB0jrBrJqqA=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","BotsCollection","MyBotsArmy","jsxDEV","_jsxDEV","App","_s","bots","setBots","myBotsArmy","setMyBotsArmy","fetch","then","res","json","data","botsElement","map","bot","AddMyBot","deleteBot","id","fileName","_jsxFileName","lineNumber","columnNumber","item","includes","prevState","myBotElement","index","mybot","removeMyBot","element","filter","method","updatedBots","catch","err","console","log","className","children","_c","$RefreshReg$"],"sources":["/home/nase/phase two/week-two-code-challenge/src/components/App.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport BotsCollection from \"./BotsCollection\";\nimport MyBotsArmy from \"./MyBotsArmy\";\nfunction App() {\n  const [bots, setBots] = useState([]);\n  const [myBotsArmy, setMyBotsArmy] = useState([]);\n  useEffect(() => {\n    fetch(\"http://localhost:3000/bots\")\n      .then((res) => res.json())\n      .then((data) => {\n        setBots(data);\n      });\n  }, []);\n  const botsElement = bots.map((bot) => {\n    return (\n      <BotsCollection\n        key={bot.id}\n        bot={bot}\n        AddMyBot={AddMyBot}\n        deleteBot={deleteBot}\n      />\n    );\n  });\n  function AddMyBot(item) {\n    if (!myBotsArmy.includes(item)) {\n      setMyBotsArmy((prevState) => {\n        return [...prevState, item];\n      });\n    }\n  }\n  const myBotElement = myBotsArmy.map((bot, index) => {\n    return (\n      <MyBotsArmy key={index} mybot={bot} removeMyBot={removeMyBot} />\n    );\n  });\n  function removeMyBot(element) {\n    setMyBotsArmy((prevState) => {\n      return prevState.filter((bot) => bot !== element);\n    });\n  }\n  function deleteBot(id) {\n    fetch(`http://localhost:3000/bots/${id}`, {\n      method: \"DELETE\",\n    })\n      .then(() => {\n        const updatedBots = bots.filter((bot) => bot.id !== id);\n        setBots(updatedBots);\n      })\n      .catch((err) => console.log(err));\n  }\n  return (\n    <div className=\"container\">\n      <div className=\"bots-collection\">\n        <h2>Bots Collection</h2>\n        <div className=\"cards-container\">{botsElement}</div>\n      </div>\n      <div className=\"my-bots-army\">\n        <h2>My Bots Army</h2>\n        <div className=\"cards-container\">{myBotElement}</div>\n      </div>\n    </div>\n  );\n}\nexport default App;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}